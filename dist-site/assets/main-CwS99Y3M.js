var m=Object.defineProperty;var g=(o,t,e)=>t in o?m(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var i=(o,t,e)=>g(o,typeof t!="symbol"?t+"":t,e);import"./modulepreload-polyfill-B5Qt9EMX.js";async function T(o){await new Promise(e=>setTimeout(e,800));const t=[`You asked about "${o}" - This is a demo response!`,`Interesting question: "${o}". In production, this would connect to a real AI API through a backend proxy.`,`Processing "${o}"... This demo shows how the tooltip handles user interactions.`,`Got it! You typed: "${o}". For real AI responses, implement a backend API endpoint.`,`Regarding "${o}" - This tooltip library supports AI integration via your own backend.`];return t[Math.floor(Math.random()*t.length)]}class w{constructor(){i(this,"tooltip");i(this,"tooltipMessage");i(this,"tooltipInput");i(this,"arrow");i(this,"buttonOne");i(this,"buttonTwo");i(this,"currentTarget",null);i(this,"isHoveringTarget",!1);i(this,"isVisible",!1);i(this,"mouseX",0);i(this,"mouseY",0);i(this,"hideTimeout",null);this.tooltip=document.getElementById("tooltip"),this.tooltipMessage=document.getElementById("tooltip-message"),this.tooltipInput=document.getElementById("tooltip-input"),this.arrow=document.getElementById("tooltip-arrow"),this.buttonOne=document.getElementById("button-one"),this.buttonTwo=document.getElementById("button-two"),this.init()}init(){this.setupMouseTracking(),this.setupKeyboardHandling(),this.setupInputHandling(),this.setupButtons()}setupMouseTracking(){let t,e=!1;document.addEventListener("mousemove",n=>{this.mouseX=n.clientX,this.mouseY=n.clientY,this.showTooltip(),e||(e=!0,requestAnimationFrame(()=>{this.updateTooltipPosition(),this.updateArrow(),e=!1})),clearTimeout(t),document.activeElement!==this.tooltipInput&&!this.tooltipInput.value.trim()&&(t=setTimeout(()=>{this.hideTooltip()},5e3))})}setupKeyboardHandling(){document.addEventListener("keydown",t=>{if(this.isVisible){if(t.key==="Escape"){this.hideTooltip();return}(t.key.length===1||t.key==="Backspace")&&document.activeElement!==this.tooltipInput&&this.tooltipInput.focus()}})}setupInputHandling(){this.tooltipInput.addEventListener("keydown",async t=>{if(t.key==="Enter"){const e=this.tooltipInput.value.trim();if(!e)return;this.tooltipInput.value="",await this.handleUserInput(e)}}),this.tooltipInput.addEventListener("input",()=>{this.hideTimeout&&(clearTimeout(this.hideTimeout),this.hideTimeout=null),this.showTooltip()}),this.tooltipInput.addEventListener("focus",()=>{this.hideTimeout&&(clearTimeout(this.hideTimeout),this.hideTimeout=null),this.showTooltip()}),this.tooltipInput.addEventListener("blur",()=>{this.tooltipInput.value.trim()||(this.hideTimeout=setTimeout(()=>{this.hideTooltip()},3e3))})}async handleUserInput(t){this.tooltipMessage.innerHTML='<div class="loading">Processing...</div>',this.showTooltip();try{const e=await T(t);this.tooltipMessage.textContent=e,this.showTooltip(),setTimeout(()=>{this.isVisible&&(document.activeElement,this.tooltipInput)},5e3)}catch(e){this.tooltipMessage.textContent="Sorry, something went wrong. Please try again.",console.error("Error:",e)}}showTooltip(){this.isVisible||(this.isVisible=!0,this.tooltip.classList.add("visible"),this.updateArrow(),setTimeout(()=>{this.isVisible&&document.activeElement!==this.tooltipInput&&this.tooltipInput.focus()},100))}hideTooltip(){document.activeElement===this.tooltipInput||this.tooltipInput.value.trim()||this.isVisible&&(this.isVisible=!1,this.tooltip.classList.remove("visible"),this.tooltipInput.blur(),this.tooltipMessage.textContent="AI Assistant ready - start typing your question!")}updateTooltipPosition(){const e=this.tooltip.offsetWidth,n=this.tooltip.offsetHeight,h=window.innerWidth,l=window.innerHeight;let r=this.mouseX+20,s=this.mouseY+20;r+e>h&&(r=this.mouseX-e-20),s+n>l&&(s=this.mouseY-n-20),r=Math.max(10,r),s=Math.max(10,s),this.tooltip.style.transform=`translate(${r}px, ${s}px)`}setupButtons(){this.buttonOne.addEventListener("click",()=>{this.buttonOne.textContent="🎉 Found me!",this.buttonOne.style.background="#e8f5e9",this.isHoveringTarget=!1,this.currentTarget=this.buttonTwo,this.updateArrow(),setTimeout(()=>{this.buttonOne.textContent="📍 Click me!",this.buttonOne.style.background="#ffffff"},2e3)}),this.buttonTwo.addEventListener("click",()=>{this.buttonTwo.textContent="🎆 Sparkles!",this.buttonTwo.style.background="#fff3e0",this.isHoveringTarget=!1,this.currentTarget=this.buttonOne,this.updateArrow(),setTimeout(()=>{this.buttonTwo.textContent="✨ Then me!",this.buttonTwo.style.background="#ffffff"},2e3)}),this.buttonOne.addEventListener("mouseenter",()=>{this.currentTarget===this.buttonOne&&(this.isHoveringTarget=!0,this.updateArrow())}),this.buttonOne.addEventListener("mouseleave",()=>{this.currentTarget===this.buttonOne&&(this.isHoveringTarget=!1,this.updateArrow())}),this.buttonTwo.addEventListener("mouseenter",()=>{this.currentTarget===this.buttonTwo&&(this.isHoveringTarget=!0,this.updateArrow())}),this.buttonTwo.addEventListener("mouseleave",()=>{this.currentTarget===this.buttonTwo&&(this.isHoveringTarget=!1,this.updateArrow())}),this.currentTarget=this.buttonOne}updateArrow(){if(!this.isVisible||!this.currentTarget)return;const t=this.tooltip.getBoundingClientRect(),e=t.left+t.width/2,n=t.top+t.height/2,h=this.currentTarget.getBoundingClientRect(),l=h.left+h.width/2,r=h.top+h.height/2,s=l-e,d=r-n,f=Math.atan2(d,s)*(180/Math.PI),a=Math.sqrt(s*s+d*d),c=this.arrow.querySelector(".v-arrow"),p=this.arrow.querySelector(".arrow-path");if(c&&p){let u=1;this.isHoveringTarget?(u=1.5,p.setAttribute("stroke","#10b981")):(a<50?u=1.4:a<100?u=1.3:a<150?u=1.2:a<250?u=1.1:a<350&&(u=1.05),p.setAttribute("stroke","#1a1a1a")),c.style.transform=`rotate(${f}deg) scale(${u})`}}}document.addEventListener("DOMContentLoaded",()=>{new w});
