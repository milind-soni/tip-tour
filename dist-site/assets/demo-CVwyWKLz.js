var B=Object.defineProperty;var P=(i,t,e)=>t in i?B(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var s=(i,t,e)=>P(i,typeof t!="symbol"?t+"":t,e);import"./modulepreload-polyfill-B5Qt9EMX.js";function A(i){return i===1?1:1-Math.pow(2,-10*i)}function w(i){return 1-Math.pow(1-i,3)}class c{constructor(t,e){s(this,"x");s(this,"y");this.x=t,this.y=e}update(t){return this.x=t.x,this.y=t.y,this}moveTowards(t,e=1,o="cubic"){const r=t.x-this.x,n=t.y-this.y;let a=e;return o==="cubic"?a=w(e):o==="expo"&&(a=A(e)),this.x+=r*a,this.y+=n*a,this}moveByAngle(t,e,o){const r=t+Math.PI/2;if(o){const n=e*w(1-o);this.x=this.x+Math.sin(r)*n,this.y=this.y-Math.cos(r)*n}else this.x=this.x+Math.sin(r)*e,this.y=this.y-Math.cos(r)*e;return this}equalsTo(t){return Math.abs(this.x-t.x)<.01&&Math.abs(this.y-t.y)<.01}getDifferenceTo(t){return new c(this.x-t.x,this.y-t.y)}getDistanceTo(t){const e=this.getDifferenceTo(t);return Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))}getAngleTo(t){const e=this.getDifferenceTo(t);return Math.atan2(e.y,e.x)}lerp(t,e){return this.x=this.x+(t.x-this.x)*e,this.y=this.y+(t.y-this.y)*e,this}toObject(){return{x:this.x,y:this.y}}}const D=30;class R{constructor(t={}){s(this,"_isEnabled");s(this,"_hasMoved");s(this,"radius");s(this,"friction");s(this,"pointer");s(this,"smoothPosition");s(this,"angle");s(this,"distance");const e=t.initialPoint||{x:0,y:0};this.radius=t.radius||D,this.friction=t.friction||.92,this._isEnabled=t.enabled!==!1,this.pointer=new c(e.x,e.y),this.smoothPosition=new c(e.x,e.y),this.angle=0,this.distance=0,this._hasMoved=!1}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}isEnabled(){return this._isEnabled}setRadius(t){this.radius=t}getRadius(){return this.radius}setFriction(t){this.friction=Math.max(0,Math.min(1,t))}getSmoothPosition(){return this.smoothPosition.toObject()}getPointerPosition(){return this.pointer.toObject()}getDistance(){return this.distance}getAngle(){return this.angle}hasMoved(){return this._hasMoved}update(t,e={}){if(this._hasMoved=!1,this.pointer.equalsTo(t)&&!e.immediate)return!1;if(this.pointer.update(t),e.immediate)return this._hasMoved=!0,this.smoothPosition.update(t),!0;if(this._isEnabled){this.distance=this.pointer.getDistanceTo(this.smoothPosition),this.angle=this.pointer.getAngleTo(this.smoothPosition);const o=this.distance>this.radius,r=e.friction!==void 0?e.friction:this.friction;if(o){const a=(this.distance-this.radius)*(1-r);this.smoothPosition.moveByAngle(this.angle,a,void 0),this._hasMoved=!0}else this.distance>.1&&(this.smoothPosition.lerp(this.pointer,(1-r)*.1),this._hasMoved=!0)}else this.distance=0,this.angle=0,this.smoothPosition.update(t),this._hasMoved=!0;return!0}reset(t){const e=t||this.pointer.toObject();this.pointer.update(e),this.smoothPosition.update(e),this.distance=0,this.angle=0,this._hasMoved=!1}}class S{constructor(t={}){s(this,"smoothCursor");s(this,"tooltip");s(this,"tooltipMessage");s(this,"tooltipInput",null);s(this,"arrow",null);s(this,"arrowTargets",[]);s(this,"options");s(this,"state");s(this,"rafId",null);s(this,"hideTimeout",null);s(this,"showTimeout",null);s(this,"lastMouseEvent",null);s(this,"onInputHandler",null);s(this,"handleMouseMove",t=>{this.lastMouseEvent=t,this.showTimeout&&clearTimeout(this.showTimeout),this.state.visible||(this.showTimeout=setTimeout(()=>{this.show()},this.options.showDelay)),this.hideTimeout&&clearTimeout(this.hideTimeout),(!this.tooltipInput||document.activeElement!==this.tooltipInput)&&(this.hideTimeout=setTimeout(()=>{this.hide()},this.options.hideDelay))});this.options={enabled:t.enabled!==!1,smoothRadius:t.smoothRadius||30,friction:t.friction||.92,offset:t.offset||{x:20,y:20},initialPoint:t.initialPoint||{x:0,y:0},className:t.className||"tiptour-tooltip",zIndex:t.zIndex||1e4,hideDelay:t.hideDelay||5e3,showDelay:t.showDelay||0,container:t.container||document.body,arrow:t.arrow===void 0?!1:t.arrow,onShow:t.onShow||(()=>{}),onHide:t.onHide||(()=>{}),onUpdate:t.onUpdate||(()=>{})},this.state={visible:!1,x:this.options.initialPoint.x,y:this.options.initialPoint.y,content:"",isLoading:!1},this.smoothCursor=new R({radius:this.options.smoothRadius,friction:this.options.friction,enabled:this.options.enabled,initialPoint:this.options.initialPoint}),this.tooltip=this.createTooltipElement(),this.tooltipMessage=this.tooltip.querySelector(".tiptour-message"),this.init()}createTooltipElement(){const t=document.createElement("div");return t.className=this.options.className,t.style.zIndex=this.options.zIndex.toString(),t.innerHTML=`
      <div class="tiptour-message"></div>
    `,this.options.container.appendChild(t),t}createArrow(){if(this.arrow)return;const t=this.options.arrow;this.arrow=document.createElement("div"),this.arrow.className="tiptour-arrow",this.arrow.innerHTML=`
      <div class="tiptour-arrow-svg">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path class="tiptour-arrow-path" d="M8 4 L16 12 L8 20" 
                stroke="${t.color||"#1a1a1a"}" 
                stroke-width="2.5" 
                stroke-linecap="round" 
                stroke-linejoin="round"/>
        </svg>
      </div>
    `,this.tooltip.appendChild(this.arrow)}init(){this.options.enabled&&this.enable(),this.options.arrow&&typeof this.options.arrow=="object"&&this.options.arrow.enabled&&this.createArrow(),this.startAnimationLoop()}startAnimationLoop(){const t=()=>{this.lastMouseEvent&&this.state.visible&&this.updatePosition(this.lastMouseEvent),this.rafId=requestAnimationFrame(t)};t()}stopAnimationLoop(){this.rafId!==null&&(cancelAnimationFrame(this.rafId),this.rafId=null)}updatePosition(t){const e={x:t.clientX,y:t.clientY};if(this.smoothCursor.update(e),this.smoothCursor.hasMoved()){const o=this.smoothCursor.getSmoothPosition();this.state.x=o.x,this.state.y=o.y,this.updateTooltipPosition(),this.updateArrow(),this.options.onUpdate(o)}}updateTooltipPosition(){const t=this.options.offset,e=this.tooltip.offsetWidth,o=this.tooltip.offsetHeight,r=window.innerWidth,n=window.innerHeight;let a=this.state.x+t.x,d=this.state.y+t.y;a+e>r&&(a=this.state.x-e-t.x),d+o>n&&(d=this.state.y-o-t.y),a=Math.max(10,a),d=Math.max(10,d),this.tooltip.style.transform=`translate(${a}px, ${d}px)`}updateArrow(){if(!this.arrow||this.arrowTargets.length===0)return;const t=this.tooltip.getBoundingClientRect(),e=t.left+t.width/2,o=t.top+t.height/2;let r=this.arrowTargets[0],n=1/0;for(const l of this.arrowTargets){const u=l.getBoundingClientRect(),C=u.left+u.width/2,L=u.top+u.height/2,v=Math.sqrt(Math.pow(C-e,2)+Math.pow(L-o,2));v<n&&(n=v,r=l)}const a=r.getBoundingClientRect(),d=a.left+a.width/2,M=a.top+a.height/2,b=d-e,I=M-o,E=Math.atan2(I,b)*(180/Math.PI),y=this.arrow.querySelector(".tiptour-arrow-svg");if(y){let l=1;n<50?l=1.4:n<100?l=1.3:n<150?l=1.2:n<250&&(l=1.1),y.style.transform=`rotate(${E}deg) scale(${l})`}}enable(){this.smoothCursor.enable(),document.addEventListener("mousemove",this.handleMouseMove),this.options.enabled=!0}disable(){this.smoothCursor.disable(),document.removeEventListener("mousemove",this.handleMouseMove),this.options.enabled=!1,this.hide()}show(){this.state.visible||(this.state.visible=!0,this.tooltip.classList.add("visible"),this.options.onShow())}hide(){this.tooltipInput&&document.activeElement===this.tooltipInput||this.state.visible&&(this.state.visible=!1,this.tooltip.classList.remove("visible"),this.options.onHide())}setContent(t){this.state.content=t,this.tooltipMessage.innerHTML=t}setMessage(t){this.tooltipMessage.textContent=t}setLoading(t){this.state.isLoading=t,t&&(this.tooltipMessage.innerHTML='<div class="tiptour-loading">Loading...</div>')}addInput(t="Type here...",e){if(this.tooltipInput)return;const o=document.createElement("div");o.className="tiptour-divider",this.tooltip.appendChild(o),this.tooltipInput=document.createElement("input"),this.tooltipInput.type="text",this.tooltipInput.className="tiptour-input",this.tooltipInput.placeholder=t,this.tooltip.appendChild(this.tooltipInput),this.onInputHandler=e||null,this.tooltipInput.addEventListener("keydown",r=>{if(r.key==="Enter"&&this.onInputHandler){const n=this.tooltipInput.value.trim();n&&(this.onInputHandler(n),this.tooltipInput.value="")}}),this.tooltipInput.addEventListener("focus",()=>{this.hideTimeout&&(clearTimeout(this.hideTimeout),this.hideTimeout=null)}),this.tooltipInput.addEventListener("blur",()=>{this.tooltipInput.value.trim()||(this.hideTimeout=setTimeout(()=>{this.hide()},this.options.hideDelay))})}addArrow(t){this.arrowTargets=t,this.arrow||this.createArrow()}getSmoothCursor(){return this.smoothCursor}setFriction(t){this.options.friction=t,this.smoothCursor.setFriction(t)}setSmoothRadius(t){this.options.smoothRadius=t,this.smoothCursor.setRadius(t)}reset(t){this.smoothCursor.reset(t),t&&(this.state.x=t.x,this.state.y=t.y)}destroy(){this.disable(),this.stopAnimationLoop(),this.tooltip.remove(),this.hideTimeout&&clearTimeout(this.hideTimeout),this.showTimeout&&clearTimeout(this.showTimeout)}}const h=new S({enabled:!0,smoothRadius:30,friction:.92,offset:{x:20,y:20},arrow:{enabled:!1},hideDelay:1e4,onUpdate:i=>{var e;document.getElementById("smoothPos").textContent=`${Math.round(i.x)}, ${Math.round(i.y)}`;const t=Math.round(((e=h.smoothCursor)==null?void 0:e.getDistance())||0);document.getElementById("distance").textContent=t}});h.setContent("<strong>Welcome to TipTour!</strong><br>Move your mouse around to see smooth tooltip movement.");document.addEventListener("mousemove",i=>{document.getElementById("mousePos").textContent=`${i.clientX}, ${i.clientY}`});const k=document.getElementById("friction"),H=document.getElementById("radius"),m=document.getElementById("toggleBtn"),p=document.getElementById("arrowBtn"),g=document.getElementById("inputBtn");let f=!0,x=!1,T=!1;k.addEventListener("input",i=>{const t=i.target.value/100;document.getElementById("frictionValue").textContent=t.toFixed(2),h.setFriction(t)});H.addEventListener("input",i=>{const t=parseInt(i.target.value);document.getElementById("radiusValue").textContent=t,h.setSmoothRadius(t)});m.addEventListener("click",()=>{f=!f,f?(h.enable(),m.textContent="Disable"):(h.disable(),m.textContent="Enable")});p.addEventListener("click",()=>{if(!x){const i=[document.getElementById("target1"),document.getElementById("target2"),document.getElementById("target3")];h.addArrow(i),x=!0,p.textContent="Arrow Added",p.disabled=!0}});g.addEventListener("click",()=>{T||(h.addInput("Type a message...",i=>{h.setMessage(`You typed: "${i}"`),setTimeout(()=>{h.setMessage("Type another message!")},3e3)}),T=!0,g.textContent="Input Added",g.disabled=!0)});document.getElementById("target1").addEventListener("click",()=>{h.setContent("<strong>Target 1 clicked!</strong><br>The arrow points to the closest target.")});document.getElementById("target2").addEventListener("click",()=>{h.setContent("<strong>Target 2 clicked!</strong><br>Notice how smoothly the tooltip follows.")});document.getElementById("target3").addEventListener("click",()=>{h.setContent("<strong>Target 3 clicked!</strong><br>Try moving between all three targets!")});
