var M=Object.defineProperty,T=(a,t,i)=>t in a?M(a,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[t]=i,s=(a,t,i)=>T(a,typeof t!="symbol"?t+"":t,i);function b(a){return a===1?1:1-Math.pow(2,-10*a)}function m(a){return 1-Math.pow(1-a,3)}class u{constructor(t,i){s(this,"x"),s(this,"y"),this.x=t,this.y=i}update(t){return this.x=t.x,this.y=t.y,this}moveTowards(t,i=1,e="cubic"){const n=t.x-this.x,o=t.y-this.y;let h=i;return e==="cubic"?h=m(i):e==="expo"&&(h=b(i)),this.x+=n*h,this.y+=o*h,this}moveByAngle(t,i,e){const n=t+Math.PI/2;if(e){const o=i*m(1-e);this.x=this.x+Math.sin(n)*o,this.y=this.y-Math.cos(n)*o}else this.x=this.x+Math.sin(n)*i,this.y=this.y-Math.cos(n)*i;return this}equalsTo(t){return Math.abs(this.x-t.x)<.01&&Math.abs(this.y-t.y)<.01}getDifferenceTo(t){return new u(this.x-t.x,this.y-t.y)}getDistanceTo(t){const i=this.getDifferenceTo(t);return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))}getAngleTo(t){const i=this.getDifferenceTo(t);return Math.atan2(i.y,i.x)}lerp(t,i){return this.x=this.x+(t.x-this.x)*i,this.y=this.y+(t.y-this.y)*i,this}toObject(){return{x:this.x,y:this.y}}}const I=30;class C{constructor(t={}){s(this,"_isEnabled"),s(this,"_hasMoved"),s(this,"radius"),s(this,"friction"),s(this,"pointer"),s(this,"smoothPosition"),s(this,"angle"),s(this,"distance");const i=t.initialPoint||{x:0,y:0};this.radius=t.radius||I,this.friction=t.friction||.92,this._isEnabled=t.enabled!==!1,this.pointer=new u(i.x,i.y),this.smoothPosition=new u(i.x,i.y),this.angle=0,this.distance=0,this._hasMoved=!1}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}isEnabled(){return this._isEnabled}setRadius(t){this.radius=t}getRadius(){return this.radius}setFriction(t){this.friction=Math.max(0,Math.min(1,t))}getSmoothPosition(){return this.smoothPosition.toObject()}getPointerPosition(){return this.pointer.toObject()}getDistance(){return this.distance}getAngle(){return this.angle}hasMoved(){return this._hasMoved}update(t,i={}){if(this._hasMoved=!1,this.pointer.equalsTo(t)&&!i.immediate)return!1;if(this.pointer.update(t),i.immediate)return this._hasMoved=!0,this.smoothPosition.update(t),!0;if(this._isEnabled){this.distance=this.pointer.getDistanceTo(this.smoothPosition),this.angle=this.pointer.getAngleTo(this.smoothPosition);const e=this.distance>this.radius,n=i.friction!==void 0?i.friction:this.friction;if(e){const h=(this.distance-this.radius)*(1-n);this.smoothPosition.moveByAngle(this.angle,h,void 0),this._hasMoved=!0}else this.distance>.1&&(this.smoothPosition.lerp(this.pointer,(1-n)*.1),this._hasMoved=!0)}else this.distance=0,this.angle=0,this.smoothPosition.update(t),this._hasMoved=!0;return!0}reset(t){const i=t||this.pointer.toObject();this.pointer.update(i),this.smoothPosition.update(i),this.distance=0,this.angle=0,this._hasMoved=!1}}class P{constructor(t={}){s(this,"smoothCursor"),s(this,"tooltip"),s(this,"tooltipMessage"),s(this,"tooltipInput",null),s(this,"arrow",null),s(this,"arrowTargets",[]),s(this,"options"),s(this,"state"),s(this,"rafId",null),s(this,"hideTimeout",null),s(this,"showTimeout",null),s(this,"lastMouseEvent",null),s(this,"onInputHandler",null),s(this,"handleMouseMove",i=>{this.lastMouseEvent=i,this.showTimeout&&clearTimeout(this.showTimeout),this.state.visible||(this.showTimeout=setTimeout(()=>{this.show()},this.options.showDelay)),this.hideTimeout&&clearTimeout(this.hideTimeout),(!this.tooltipInput||document.activeElement!==this.tooltipInput)&&(this.hideTimeout=setTimeout(()=>{this.hide()},this.options.hideDelay))}),this.options={enabled:t.enabled!==!1,smoothRadius:t.smoothRadius||30,friction:t.friction||.92,offset:t.offset||{x:20,y:20},initialPoint:t.initialPoint||{x:0,y:0},className:t.className||"tiptour-tooltip",zIndex:t.zIndex||1e4,hideDelay:t.hideDelay||5e3,showDelay:t.showDelay||0,container:t.container||document.body,arrow:t.arrow===void 0?!1:t.arrow,onShow:t.onShow||(()=>{}),onHide:t.onHide||(()=>{}),onUpdate:t.onUpdate||(()=>{})},this.state={visible:!1,x:this.options.initialPoint.x,y:this.options.initialPoint.y,content:"",isLoading:!1},this.smoothCursor=new C({radius:this.options.smoothRadius,friction:this.options.friction,enabled:this.options.enabled,initialPoint:this.options.initialPoint}),this.tooltip=this.createTooltipElement(),this.tooltipMessage=this.tooltip.querySelector(".tiptour-message"),this.init()}createTooltipElement(){const t=document.createElement("div");return t.className=this.options.className,t.style.zIndex=this.options.zIndex.toString(),t.innerHTML=`
      <div class="tiptour-message"></div>
    `,this.options.container.appendChild(t),t}createArrow(){if(this.arrow)return;const t=this.options.arrow;this.arrow=document.createElement("div"),this.arrow.className="tiptour-arrow",this.arrow.innerHTML=`
      <div class="tiptour-arrow-svg">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path class="tiptour-arrow-path" d="M8 4 L16 12 L8 20" 
                stroke="${t.color||"#1a1a1a"}" 
                stroke-width="2.5" 
                stroke-linecap="round" 
                stroke-linejoin="round"/>
        </svg>
      </div>
    `,this.tooltip.appendChild(this.arrow)}init(){this.options.enabled&&this.enable(),this.options.arrow&&typeof this.options.arrow=="object"&&this.options.arrow.enabled&&this.createArrow(),this.startAnimationLoop()}startAnimationLoop(){const t=()=>{this.lastMouseEvent&&this.state.visible&&this.updatePosition(this.lastMouseEvent),this.rafId=requestAnimationFrame(t)};t()}stopAnimationLoop(){this.rafId!==null&&(cancelAnimationFrame(this.rafId),this.rafId=null)}updatePosition(t){const i={x:t.clientX,y:t.clientY};if(this.smoothCursor.update(i),this.smoothCursor.hasMoved()){const e=this.smoothCursor.getSmoothPosition();this.state.x=e.x,this.state.y=e.y,this.updateTooltipPosition(),this.updateArrow(),this.options.onUpdate(e)}}updateTooltipPosition(){const t=this.options.offset,i=this.tooltip.offsetWidth,e=this.tooltip.offsetHeight,n=window.innerWidth,o=window.innerHeight;let h=this.state.x+t.x,l=this.state.y+t.y;h+i>n&&(h=this.state.x-i-t.x),l+e>o&&(l=this.state.y-e-t.y),h=Math.max(10,h),l=Math.max(10,l),this.tooltip.style.transform=`translate(${h}px, ${l}px)`}updateArrow(){if(!this.arrow||this.arrowTargets.length===0)return;const t=this.tooltip.getBoundingClientRect(),i=t.left+t.width/2,e=t.top+t.height/2;let n=this.arrowTargets[0],o=1/0;for(const r of this.arrowTargets){const d=r.getBoundingClientRect(),y=d.left+d.width/2,x=d.top+d.height/2,p=Math.sqrt(Math.pow(y-i,2)+Math.pow(x-e,2));p<o&&(o=p,n=r)}const h=n.getBoundingClientRect(),l=h.left+h.width/2,f=h.top+h.height/2,g=l-i,v=f-e,w=Math.atan2(v,g)*(180/Math.PI),c=this.arrow.querySelector(".tiptour-arrow-svg");if(c){let r=1;o<50?r=1.4:o<100?r=1.3:o<150?r=1.2:o<250&&(r=1.1),c.style.transform=`rotate(${w}deg) scale(${r})`}}enable(){this.smoothCursor.enable(),document.addEventListener("mousemove",this.handleMouseMove),this.options.enabled=!0}disable(){this.smoothCursor.disable(),document.removeEventListener("mousemove",this.handleMouseMove),this.options.enabled=!1,this.hide()}show(){this.state.visible||(this.state.visible=!0,this.tooltip.classList.add("visible"),this.options.onShow())}hide(){this.tooltipInput&&document.activeElement===this.tooltipInput||this.state.visible&&(this.state.visible=!1,this.tooltip.classList.remove("visible"),this.options.onHide())}setContent(t){this.state.content=t,this.tooltipMessage.innerHTML=t}setMessage(t){this.tooltipMessage.textContent=t}setLoading(t){this.state.isLoading=t,t&&(this.tooltipMessage.innerHTML='<div class="tiptour-loading">Loading...</div>')}addInput(t="Type here...",i){if(this.tooltipInput)return;const e=document.createElement("div");e.className="tiptour-divider",this.tooltip.appendChild(e),this.tooltipInput=document.createElement("input"),this.tooltipInput.type="text",this.tooltipInput.className="tiptour-input",this.tooltipInput.placeholder=t,this.tooltip.appendChild(this.tooltipInput),this.onInputHandler=i||null,this.tooltipInput.addEventListener("keydown",n=>{if(n.key==="Enter"&&this.onInputHandler){const o=this.tooltipInput.value.trim();o&&(this.onInputHandler(o),this.tooltipInput.value="")}}),this.tooltipInput.addEventListener("focus",()=>{this.hideTimeout&&(clearTimeout(this.hideTimeout),this.hideTimeout=null)}),this.tooltipInput.addEventListener("blur",()=>{this.tooltipInput.value.trim()||(this.hideTimeout=setTimeout(()=>{this.hide()},this.options.hideDelay))})}addArrow(t){this.arrowTargets=t,this.arrow||this.createArrow()}getSmoothCursor(){return this.smoothCursor}setFriction(t){this.options.friction=t,this.smoothCursor.setFriction(t)}setSmoothRadius(t){this.options.smoothRadius=t,this.smoothCursor.setRadius(t)}reset(t){this.smoothCursor.reset(t),t&&(this.state.x=t.x,this.state.y=t.y)}destroy(){this.disable(),this.stopAnimationLoop(),this.tooltip.remove(),this.hideTimeout&&clearTimeout(this.hideTimeout),this.showTimeout&&clearTimeout(this.showTimeout)}}export{P as T};
